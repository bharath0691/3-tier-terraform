trigger:
  branches:
    include:
      - "main"
    exclude:
      - "feature/*"
  paths:
    include:
    - '*'
    exclude:
    - '**/*.md'
    - '**/docs/*'	
parameters:
  - name: env
    displayName: Deployment Environment
    default: dev
    values:
      - dev
      - qa
      - prod

pool:
  vmImage: windows-latest
  
variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  env: ${{ lower(parameters.env) }}

stages:
- stage: Build
  displayName: Build stage
  
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: windows-latest

    steps:
    - task: NuGetToolInstaller@1
      displayName: 'Use NuGet 4.4.1'
      inputs:
        versionSpec: 4.4.1

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: '**/DotNetAppSqlDb.sln'
      
    - task: VSBuild@1
      displayName: 'Build solution '
      inputs:
        solution: '**/DotNetAppSqlDb.sln'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\"'

    - task: VSTest@2
      displayName: testAssemblies
      inputs:
        testAssemblyVer2: |
          **\$(BuildConfiguration)\*test*.dll
          !**\obj\**
          platform: '$(BuildPlatform)'
          configuration: '$(BuildConfiguration)'

    - task: PublishSymbols@2
      displayName: 'Publish symbols path'
      inputs:
        PublishSymbols: false
    
    # - task: PublishBuildArtifacts@1
    #   displayName: 'Publish Artifact'
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'

- stage: Deploy
  displayName: Deploy stage on ${{ lower(parameters.env) }}
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: ${{ lower(parameters.env) }}
    pool:
      vmImage: windows-latest
    strategy:
      runOnce:
        deploy:
          steps:
            - task: AzureRmWebAppDeployment@4
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: 'arm-src'
                appType: 'webApp'
                WebAppName: 'dev-appserviceiqsa01'
                packageForLinux: '$(Agent.BuildDirectory)/**/*.zip'